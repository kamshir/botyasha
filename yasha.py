import vk_api
import random
import time
import re
import datetime
import data

# –¢–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
token = 'b6350f067b8b6f7f86090e36f9a05fe26e640a595b190c709bd65855d17e6dd5ca05ff2bd0b1347cb1fce'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
vk  = vk_api.VkApi(token=token)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
vk._auth_token()

name = '–Ø—à–∞'
days = data.days
months = data.months

# –°—á—ë—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
while True:
	try:
		# –ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
		messages = vk.method("messages.getConversations", {"offset": 0, "count": 20, "filter": "unanswered"})
		if messages['count'] >= 1:
			id = messages["items"][0]["last_message"]["from_id"]
			body = messages["items"][0]["last_message"]["text"]

			if body.lower() == "–Ω–∞—á–∞—Ç—å":
				vk.method("messages.send", {"peer_id": id, "message": 'ü¶Å –ü—Ä–∏–≤–µ—Ç!\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!', "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–ø—Ä–∏–≤–µ—Ç" or body.lower() == "—Ö–∞–π" or body.lower() == "–¥–∞—Ä–æ–≤–∞" or body.lower() == "–∑–¥—Ä–∞—Å—Ç–µ":
				vk.method("messages.send", {"peer_id": id, "message": 'ü¶Å ' + body, "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–∫—Ç–æ —è?":
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –¢—ã —Å–∞–º—ã–π –ø—Ä–µ–¥–∞–Ω–Ω—ã–π —Ü–µ–Ω–∏—Ç–µ–ª—å –∏–≥—Ä!", "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "—è—à–∞" or body.lower() == "—è—à" or body.lower() == "—è—à–∏–∫" or body.lower() == "—è–∫–æ–≤" or body.lower() == "—è—à–Ω–∏–∫":
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ª—é–±–µ–∑–µ–Ω?", "random_id": random.randint(1, 2147483647)})

			elif re.findall('–ø–æ–º–æ+', body):
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?", "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–¥–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è":
				today = datetime.datetime.today()
				day = today.strftime("%e")
				num = int(today.strftime("%w"))
				month = today.strftime("%b")
				year = today.strftime("%Y")
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –°–µ–≥–æ–¥–Ω—è " + day + " " + month + ", " + year + ' –≥. , ' + days[num] , "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–¥–∞—Ç–∞ –∑–∞–≤—Ç—Ä–∞":
				tommorrow = datetime.datetime.today() + datetime.timedelta(days=1)
				day = tommorrow.strftime("%e")
				num = int(tommorrow.strftime("%w"))
				month = tommorrow.strftime("%b")
				year = tommorrow.strftime("%Y")
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –ó–∞–≤—Ç—Ä–∞ " + day + " " + month + ", " + year + ' –≥. , ' + days[num] , "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–≥–æ–ª–æ—Å":
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –†—Ä—Ä—Ä—Ä—Ä—Ä!", "random_id": random.randint(1, 2147483647)})

			elif body.lower() == "–∫—Ç–æ —Ç—ã?" or body.lower() == "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç" or body.lower() == "—Ç—ã –∫—Ç–æ?":
				introduce = 'ü¶Å –ú–µ–Ω—è –∑–æ–≤—É—Ç ' + name + '.\n –Ø - –±–æ—Ç —ç—Ç–æ–≥–æ –ø–∞–±–ª–∏–∫–∞, –≥–¥–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏ –æ Java –∏–≥—Ä–∞—Ö –∏ –Ω–µ —Ç–æ–ª—å–∫–æ.\n –†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ. üòä'
				vk.method("messages.send", {"peer_id": id, "message": introduce, "random_id": random.randint(1, 2147483647)})

			else:
				vk.method("messages.send", {"peer_id": id, "message": "ü¶Å –ö–æ–º–∞–Ω–¥–∞ \"" + str(body.lower()) + '\" –º–Ω–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞', "random_id": random.randint(1, 2147483647)})
	except Exception as E:
		time.sleep(1)